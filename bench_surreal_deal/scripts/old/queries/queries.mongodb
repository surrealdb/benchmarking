use('surreal_deal');

// Selecting multiple fields from multiple tables using record links
use('surreal_deal');
db.review.aggregate([
	{
		"$lookup": {
			"from": "artist",
			"localField": "artist",
			"foreignField": "_id",
			pipeline: [
				{ $project: { _id: 0, name: 1, email: 1, phone: 1 } }
			],
			"as": "artist",
		}

	},
	{
		"$lookup": {
			"from": "person",
			"localField": "person",
			"foreignField": "_id",
			pipeline: [
				{ $project: { _id: 0, name: 1, email: 1, phone: 1 } }
			],
			"as": "person",
		}

	},
	{
		"$lookup": {
			"from": "product",
			"localField": "product",
			"foreignField": "_id",
			pipeline: [
				{ $project: { _id: 0, name: 1, category: 1, price: 1 } }
			],
			"as": "product",
		}
	}
]).explain("executionStats")

// .explain("executionStats")

// Selecting multiple fields from multiple tables using graph
use('surreal_deal');
db.order.aggregate([
	{
		"$lookup": {
			"from": "person",
			"localField": "person",
			"foreignField": "_id",
			pipeline: [
				{ $project: { _id: 0, name: 1, email: 1, phone: 1 } }
			],
			"as": "person",
		}

	},
	{
		"$lookup": {
			"from": "product",
			"localField": "product",
			"foreignField": "_id",
			pipeline: [
				{
					"$lookup": {
						"from": "artist",
						"localField": "artist",
						"foreignField": "_id",
						pipeline: [
							{ $project: { _id: 0, name: 1, email: 1, phone: 1 } }
						],
						"as": "artist",
					}
				},
				{ $project: { _id: 0, category: 1, description: 1, image_url: 1, artist: 1 } }
			],
			"as": "product",
		}
	},
	{ $project: { _id: 0, price: 1, order_date: 1, product_name: 1, artist: 1, person: 1, product: 1 } }
]).explain("executionStats")


// Name and email for all customers in England
db.person.find(
	{ "address.country": "England" },
	{ _id: 0, name: 1, email: 1 }
).explain("executionStats")

// Count the number of confirmed orders in Q1 by artists in England
db.order.aggregate([
	{
		"$lookup": {
			"from": "product",
			"localField": "product",
			"foreignField": "_id",
			pipeline: [
				{
					"$lookup": {
						"from": "artist",
						"localField": "artist",
						"foreignField": "_id",
						pipeline: [
							{ $project: { _id: 0, "address.country": 1 } }
						],
						"as": "artist",
					}
				},
				{ $project: { _id: 0, artist: 1 } }
			],
			"as": "product",
		}
	},
	{
		$match: {
			$or: [{ order_status: null }, { order_status: { $ne: "pending" } }],
			$expr: { $lte: [{ $month: "$order_date" }, 3] },
			"product.artist.address.country": "England",
		}
	},
	{ $count: "count" }
]).explain("executionStats")

// Delete a specific review
db.review.deleteOne({ "_id": "8aea6f25-f0bf-470b-927f-4dacf0beb16a" })

// Delete reviews from a particular category
db.review.deleteMany({ product: { $in: db.product.distinct("_id", { category: "charcoal" }) } });

// Update customer address
db.person.updateOne(
	{ _id: "41e60664-e96c-465d-b92a-eee2f143c05d" },
	{
		$set: {
			address: {
				'address_line_1': '497 Ballycander',
				'address_line_2': null,
				'city': 'Bromyard',
				'country': 'Wales',
				'post_code': 'ZX8N 4VJ',
				'coordinates': [68.772592, -35.491877]
			}
		}
	}
)

// Update discount for products
db.product.updateMany(
	{ price: { $lt: 1000 } },
	{ $set: { discount: 0.2 } }
)


// Transaction - order from a new customer
session = db.getMongo().startSession({ readPreference: { mode: "primary" } });
session.startTransaction({ readConcern: { level: "local" }, writeConcern: { w: "majority" } });
try {

	// -- insert into the person table
	db.person.insertOne({
		'_id': '644ef4d0-423f-4446-95df-bc8b5b634874',
		'first_name': 'Karyl',
		'last_name': 'Langley',
		'name': 'Karyl Langley',
		'company_name': null,
		'email': 'dee1961@gmail.com',
		'phone': '+44 47 3516 5895',
		'address': {
			'address_line_1': '510 Henalta',
			'address_line_2': null,
			'city': 'Lyme Regis',
			'country': 'Northern Ireland',
			'post_code': 'TO6Q 8CM',
			'coordinates': [-34.345071, 118.564172]
		}
	})

	// -- relate into the order table
	db.order.insertOne({
		"_id": UUID(),
		"person": "d848be01-fd10-41ab-b861-87541b1373e6",
		"product": "9e623dd7-0ac5-43c8-8597-26364e26a5a7",
		'currency': '£',
		'discount': db.product.distinct("discount", { "_id" : "9e623dd7-0ac5-43c8-8597-26364e26a5a7" }),
		"order_date": new Date(),
		"order_status": "pending",
		"payment_method": "PayPal",
		"price": db.product.distinct("price", { "_id" : "9e623dd7-0ac5-43c8-8597-26364e26a5a7" }),
		"product_name": db.product.distinct("name", { "_id" : "9e623dd7-0ac5-43c8-8597-26364e26a5a7" }),
		"quantity": 1,
		"shipping_address": db.person.distinct("address", { "_id" : "d848be01-fd10-41ab-b861-87541b1373e6" })
	});

	// -- update the product table to reduce the quantity
	db.product.updateOne(
		{ _id: "d17ad98c-26ed-40ae-ac17-03243da1825e" },
		{ $inc: { quantity: -1 } }
	)

} catch (error) {
	// Abort transaction on error
	session.abortTransaction();
	throw error;
}
// Commit the transaction using write concern set at transaction start
session.commitTransaction();
session.endSession();


// # Transaction - New Artist creates their first product
session = db.getMongo().startSession({ readPreference: { mode: "primary" } });
session.startTransaction({ readConcern: { level: "local" }, writeConcern: { w: "majority" } });
try {

	// -- insert into the artist table
	db.artist.insertOne({
		'_id': 'b8683656-6fe3-47ae-830c-41451c3ce953',
		'first_name': 'Anderson',
		'last_name': 'West',
		'name': 'Anderson West',
		'company_name': 'Atkins(ws) (ATK)',
		'email': 'six1933@gmail.com',
		'phone': '056 5881 1126',
		'address': {
			'address_line_1': '639 Connaugh',
			'address_line_2': null,
			'city': 'Ripon',
			'country': 'Scotland',
			'post_code': 'CG3U 4TH',
			'coordinates': [4.273648, -112.907273]
		}
	});

	// -- insert into the product table
	db.product.insertOne({
		'_id': 'd8f59414-4484-4634-a866-8b607fd2311e',
		'name': 'managed edt allocated pda',
		'description': 'counseling dildo greek pan works interest xhtml wrong dennis available cl specific next tower webcam peace magic',
		'category': 'watercolor',
		'price': 15735.96,
		'currency': '£',
		'discount': null,
		'quantity': 1,
		'image_url': 'https://source.unsplash.com/1920x1080?',
		"artist": 'b8683656-6fe3-47ae-830c-41451c3ce953',
		"creation_history": {
			"quantity": 1,
			"created_at": new Date()
		}
	});
} catch (error) {
	// Abort transaction on error
	session.abortTransaction();
	throw error;
}
// Commit the transaction using write concern set at transaction start
session.commitTransaction();
session.endSession();